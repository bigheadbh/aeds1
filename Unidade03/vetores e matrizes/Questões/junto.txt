
/* Escreva um programa que leia um vetor G de 20 caracteres que representa o gabarito de uma prova. A seguir, para cada um dos alunos de uma turma, leia o vetor de respostas (R) e conte o número de acertos. Mostre a nota do aluno e uma mensagem APROVADO, se a nota for maior ou igual a 6 ou REPROVADO, caso contrário. Cada questão correta vale 0,5 ponto. */

#include<stdio.h>
#include<stdlib.h>

#define TAM 10

int main(void){
    char gabarito[TAM];
    char respostas[5][TAM];
    int nota = 0;
    int resultado[5];

    for (int i = 0; i < TAM; i++){
        ​​printf("Entre com o gabarito da questao [%d]:", i + 1);
        scanf(" %c", &gabarito[i]);
        system("cls");
        fflush(stdin);
    }
    ​​
    for (int i = 0; i < 5; i++){
        ​​printf("\n*********************************************\n");
        printf("            RESPOSTA ALUNO %d\n", i + 1);
        nota = 0;
        for (int j = 0; j < TAM; j++){
            ​​printf("Entre com a alternativa da questao [%d]:", j + 1);
            scanf("%c", &respostas[i][j]);
            if (gabarito[j] == respostas[i][j]){
                nota++;
            }
            fflush(stdin);
        }
        resultado[i] = nota;
    }
    ​​
    printf("\n**************************************");
    printf("\n*               Resultados");
    printf("\n**************************************");
    for (int i = 0; i < 5; i++)
        printf("\nResultado do candidato %d = %d", i + 1, resultado[i] * 1.0 / 2);
    
    ​​
    printf("\n\n**************************************");
    printf("\n*               GABARITO");
    printf("\n**************************************");
    for (int i = 0; i < TAM; i++)
        printf("\n[%d]:%c", i + 1, gabarito[i]);

    return 0;
}
​​

/* Faça um programa em C para ler e manipular informações de um cadastro de automóveis. São necessárias duas estruturas: carro e proprietario. Todos os dados de um carro devem ser lidos e depoi
s impressos. Os campos das estruturas são: 

carro: modelo (char), ano (int), placa (char), proprietario (proprietario);

proprietario: cpf (long int), nome (char).*/



#include<stdlib.h>

#include<stdio.h>



typedef struct Proprietario{

    char nome[20];

    long int cpf;

}Proprietario;



typedef struct Carro{

    char modelo[15];

    int ano;

    char placa[10];

    Proprietario proprietario;

}Carro;



int main(){

    Carro c1;

    printf("Cadastro de Automoveis\n");

    printf("Digite o nome do proprietario:\n");

    scanf("%s", c1.proprietario.nome);

    printf("Digite o CPF do proprietario:\n");

    scanf(" %ld", &c1.proprietario.cpf);

    printf("Digite o modelo do carro:\n");

    scanf("%s", c1.modelo);

    printf("Digite o ano do carro:\n");

    scanf(" %d", &c1.ano);

    printf("Digite a placa do carro:\n");

    scanf("%s", c1.placa);



    printf("Cadastro de Automoveis\n");

    printf("Nome do proprietario: %s\n", c1.proprietario.nome);

    printf("CPF do proprietario: %ld\n", c1.proprietario.cpf);

    printf("Modelo do carro: %s\n", c1.modelo);

    printf("Ano do carro: %d\n", c1.ano);

    printf("Placa do carro: %s\n", c1.placa);



    return 0;

}

}

